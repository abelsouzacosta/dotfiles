# Set the directory we want to store zinit and plugins
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"

# Download Zinit, if it's not there yet
if [ ! -d "$ZINIT_HOME" ]; then
   mkdir -p "$(dirname $ZINIT_HOME)"
   git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi

# Source/Load zinit
source "${ZINIT_HOME}/zinit.zsh"

export FZF_DEFAULT_OPTS=" \
--color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
--color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
--color=marker:#f5e0dc,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8"

# Add in zsh plugins
zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions
zinit light Aloxaf/fzf-tab
zinit ice depth=1
zinit light jeffreytse/zsh-vi-mode
# Add in snippets downloaded from the oh my zsh plugins repository
zinit snippet OMZP::git
zinit snippet OMZP::sudo
zinit snippet OMZP::archlinux
zinit snippet OMZP::taskwarrior
zinit snippet OMZP::thefuck

# Load completions
autoload -Uz compinit && compinit

zinit cdreplay -q

eval "$(starship init zsh)"

# Keybindings
bindkey -e
bindkey '^p' history-search-backward
bindkey '^n' history-search-forward
bindkey '^[w' kill-region

# History
HISTSIZE=5000
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

# Completion styling
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu no
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'
zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'ls --color $realpath'

# Aliases
# Shell integrations
eval "$(fzf --zsh)"
eval "$(zoxide init --cmd cd zsh)"

# Adding python poetry
export PATH="$HOME/.local/bin:$PATH"


# Aliases
alias md="mkdir -p"
alias cat='bat'
alias ls='eza --icons'
alias lslha='eza --icons --long --all'
alias lslh='eza --icons --long'
alias lst='eza --long --tree --level=3'
alias lsd='eza --long --header --icons --git'
alias z='zoxide'
alias c='clear'
alias rm="trash"
alias zl="zellij"
alias tlmgr="sudo /usr/local/texlive/2025/bin/x86_64-linux/tlmgr"

## [Completion]
## Completion scripts setup. Remove the following line to uninstall
[[ -f /home/junior/.dart-cli-completion/zsh-config.zsh ]] && . /home/junior/.dart-cli-completion/zsh-config.zsh || true
## [/Completion]

# helper functions
pacfind () {
   local package="$1"
   pacman -Ss "^$package$" 

   if [[ $? -eq 1 ]]; then
      yayfind "$package"
   fi
}

yayfind() {
   local package="$1"
   yay -Ss "$package"
}
eval "$(~/.local/bin/mise activate zsh)"

if [ -n "$KITTY_INSTALLATION_DIR" ]; then
    source "$KITTY_INSTALLATION_DIR/shell-integration/zsh/.zshenv"
fi

export EDITOR="nvim"
export PATH=/usr/local/texlive/2025/bin/x86_64-linux:$PATH
